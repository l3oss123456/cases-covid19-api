{"version":3,"sources":["../../src/utils/domains.js"],"names":["findAndUpdateOrCreate","repo","filter","data","findOne","obj","update","create","findOrCreate","findOneIfAlreadyExistThrowError","ThrowError","ALREADY_EXIST","model","modelName","findOneIfNotExistThrowError","NOT_FOUND","findOneOrFindAll","find","checkUpdate","checkDelete","deleteOne","broadcastData","wss","clients","forEach","client","send","JSON","stringify"],"mappings":"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","sourcesContent":["import mongoose from \"mongoose\"\r\nimport ThrowError from \"../errors/basic\"\r\nimport * as R from \"ramda\"\r\nimport wss from \"./websocket\"\r\n\r\nexport const findAndUpdateOrCreate = async (repo, filter, data) => {\r\n  let obj = await repo.findOne(filter)\r\n  if (obj) {\r\n    obj = await repo.update(filter, data)\r\n  } else {\r\n    obj = await repo.create(data)\r\n  }\r\n  return obj\r\n}\r\nexport const findOrCreate = async (repo, filter, data) => {\r\n  let obj = await repo.findOne(filter)\r\n  if (!obj) {\r\n    obj = await repo.create(data)\r\n  }\r\n  return obj\r\n}\r\n\r\nexport const findOneIfAlreadyExistThrowError = async (repo, filter) => {\r\n  const obj = await repo.findOne(filter)\r\n  if (obj) throw ThrowError.ALREADY_EXIST({ model: repo.model.modelName, ...filter })\r\n  return obj\r\n}\r\n\r\nexport const findOneIfNotExistThrowError = async (repo, filter) => {\r\n  const obj = await repo.findOne(filter)\r\n  if (!obj) throw ThrowError.NOT_FOUND({ model: repo.model.modelName, ...filter })\r\n  return obj\r\n}\r\n\r\nexport const findOneOrFindAll = async (repo, filter) => {\r\n  const obj = await repo.find(filter)\r\n  return obj\r\n}\r\n\r\nexport const checkUpdate = async (repo, filter, data) => {\r\n  const obj = await repo.update(filter, data, { new: true })\r\n  if (!obj) throw ThrowError.NOT_FOUND({ model: repo.model.modelName, ...filter })\r\n  return obj\r\n}\r\n\r\nexport const checkDelete = async (repo, filter) => {\r\n  const obj = await repo.deleteOne(filter)\r\n  if (!obj) throw ThrowError.NOT_FOUND({ model: repo.model.modelName, ...filter })\r\n  return obj\r\n}\r\n\r\nexport const broadcastData = (data) => {\r\n  wss.clients.forEach((client) => {\r\n    client.send(JSON.stringify(data))\r\n  })\r\n  // wss.on(\"connection\", (ws) => {\r\n  //   // สร้าง connection\r\n\r\n  //   ws.on(\"message\", (message) => {\r\n  //     // รอรับ data อะไรก็ตาม ที่มาจาก client แบบตลอดเวลา\r\n  //   })\r\n\r\n  //   ws.on(\"close\", () => {\r\n  //     // จะทำงานเมื่อปิด Connection ในตัวอย่างคือ ปิด Browser\r\n  //     ws.send(\"websocket disconnected !\")\r\n  //   })\r\n\r\n  //   // ws.send(\"websocket connected !\")\r\n  //   if (!R.isNil(data) && !R.isEmpty(data)) {\r\n  //     // console.log(\"data;\", data)\r\n  //     ws.send(JSON.stringify(data))\r\n  //   }\r\n  // })\r\n}\r\n"],"file":"domains.js"}